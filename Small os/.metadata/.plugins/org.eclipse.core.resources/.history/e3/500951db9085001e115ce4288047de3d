/*
 * smallOS.c
 *
 *  Created on: Nov 17, 2023
 *      Author: OMR
 */
#include"smallOS.h"
#include"MCU_HW.h"
#include"PUSH_BUTTON.h"
#include"util/delay.h"
#include"GPIO.h"
void toggleBlueLed(GPIO_REGISTERS* ledPort, u8 ledPin)
{
	ledPort->PORT_R.ALL_BITS ^= 1<<ledPin;
}

void blinkLed(GPIO_REGISTERS* ledPort, u8 ledPin)
{
	DIO_voidSetPinValue(ledPort, ledPin, 1);
	_delay_ms(2);
	DIO_voidSetPinValue(ledPort, ledPin, 0);
	//_delay_ms(2);

}
void task1()
{

	/*blink red led*/
	blinkLed(PERIPHRAL_B, 0);

}

void task2()
{
	/*toggle blue led*/
	if(PB_getButtonState(PERIPHRAL_C, 7) == PRESSED)
	{
		toggleBlueLed(PERIPHRAL_C, 0);
	}
}

void task3()
{
	/*blink green led*/
	blinkLed(PERIPHRAL_D, 0);

}


static task_t tasks[3]={{60,task1},{30,task2},{180,task3}};

 void sechulder(void)
{
	static volatile  u32 c=0;
	c++;
	for (int i=0;i<3;i++)
	{
		if (c%tasks[i].periodicity==0)
		{
			tasks[i].pfun();
		}
	}
	//DIO_voidSetPinValue(PERIPHRAL_B, 0, 1);

	if (c== 180) c=0;
}


